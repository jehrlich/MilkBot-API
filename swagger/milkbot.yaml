---
swagger: '2.0'
info:
  version: 1.2.0
  title: MilkBot(R) lactation API
  description: access to MilkBot(R) fitting engine.
  termsOfService: http://milkbot.com/terms/
  contact:
    name: MilkBot Support
    url: http://milkbot.com/support
    email: support@milkbot.com
host: milkbot.com
basePath: /fitter
schemes: [http, https, ws, wss]
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
security:
  - internalApiKey: []
securityDefinitions:
  internalApiKey:
    type: apiKey
    in: header
    name: api_key
paths:
  /fitLactation:
    get:
      summary: Fit a lactation.
      parameters:
        - name:  lactation
          in: body
          description: a single lactation
          required: true
          schema:
            $ref: '#/definitions/Lactation'
      responses:
        200:
          description: Lactation fitted
          schema:
            $ref: '#/definitions/MBParams'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /fitLactations:
    post:
      summary: Fit a list of lactations.
      parameters:
        - name:  lactations
          in: body
          required: true
          schema:
            $ref: '#/definitions/LactationList'
    # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Lactations fitted
          schema:
           type: array
           items: 
              $ref: '#/definitions/MBParams'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



definitions:
  MBParams:
    description: MilkBot(R) parameter set.
    type: object
    properties:
      scale:
        type: number
        format: float
      ramp:
        type: number
        format: float
      offset:
        type: number
        format: float
      decay:
        type: number
        format: float
      pt_ct:
        type: number
        format: integer
      std_error:
        type: number
        format: float
      base_unit:
        $ref: '#/definitions/BaseUnit'

  BaseUnit:
    description: Unit of measurement.
    type: object
    properties:
      name:
        type: string
        description: abbreviated name of measurement unit
        default: "kg"
        enum: [lb, kg, l, g]

  Lactation:
    description: A single lactation of any length.
    type: object
    properties:
      ID:
        type: string
      name:
        type: string
      breed:
        type: string
        description: breed of cow
        default: "H"
        enum: [H, J, BS, G, X]
      unit:
       $ref: '#/definitions/BaseUnit'
      parity:
        description: parity of this lactation
        type: number
        format: integer
        default: 3
      points:
        type: array
        items: 
          $ref: '#/definitions/MilkPt'
    required: [points]
    
  MilkPt:
    description: Measured milk production data point.
    type: object
    required: [dim, milk]
    properties:
      dim:
        description: Days since calving date
        type: number
        format: integer
      milk:
        type: number
        format: float
      base_unit:
        $ref: '#/definitions/BaseUnit'
      dayfraction:
        description: fraction of 24hr production this represents    
        type: number
        format: float
        default: 1.0
        
  LactationList:
    description: A list of lactations.
    type: object
    required: [lactations]
    properties:
      lactations:
        type: array
        items: 
          $ref: '#/definitions/Lactation'
      base_unit:
       $ref: '#/definitions/BaseUnit'
      priors:
       $ref: '#/definitions/PopulationPriors'
          
  PopulationPriors:
    description: Bayesian prior expectations used by fitting engine.
    type: object
    properties:
      means:
        $ref: '#/definitions/MBParams'
      variance:
        $ref: '#/definitions/MBParams'
  
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string



