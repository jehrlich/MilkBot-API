openapi: 3.0.1
info:
  title: MilkBot lactation API
  description: >-
    This service uses the MilkBot&reg; fitting engine to fit the MilkBot&reg;
    model to lactation data supplied as (DIM, milk weight) data points.  The
    returned parameter set can be substituted into the MilkBot&reg;
    equation<br><br> ((1 - E^((offset - t)/ramp)/2)*scale)/E^(decay X t)
    <br><br>to generate predicted milk production at any time in the lactation,
    where t is time since calving (in days, DIM=0 at calving) and E is Euler's
    number.<br><br> Simple formulas described at the support URL can calculate
    persistence, M305, or cumulative milk between dates. The fitting process
    uses Bayesian priors describing expected means and variance of parameter
    values as well as expected mean and variance in fitting error. If priors are
    provided, they will be used. Otherwise default values based on breed and
    parity will be used
  termsOfService: http://MilkBot.com/terms/
  contact:
    name: Jim Ehrlich, DVM
    email: jehrlich@MilkBot.com
  version: 1.2.0
servers:
  - description: Production server
    url: https://europe-west1-numeric-analogy-337601.cloudfunctions.net/milkBot-fitter
security:
  - ApiKeyAuth: []  
paths:
  /fitLactation:
    post:
      operationId: fitSingle
      description: >-
        Fit a single lactation from the supplied array of  (DIM, milk weight) data pairs
        using a default tree of Bayesian priors stratified by on breed and parity.
      requestBody:
        description: a single lactation
        content:
          application/json:
            schema:
              required:
                - lactation
              properties:
                lactation:
                  $ref: "#/components/schemas/Lactation"
                priors:
                  $ref: "#/components/schemas/Priors"
        required: true
      responses:
        "200":
          description: Lactation fitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fit"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /fitLactations:
    post:
      operationId: fitLactations
      summary: Fit a list of lactations.
      description: >-
        Fit a group of lactations returning fitted parameter values. If '**_priors_**'
        are supplied they will be used. Otherwise fitting will be done from defaults.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fittingJob
              properties:
                fittingJob:
                  $ref: "#/components/schemas/FittingJob"
        required: true
      responses:
        "200":
          description: fitted parameter values for lactations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FittingResult"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /Priors/{milkUnit}:
    get:
      operationId: getDefaultPriors
      description: >-
        Get the default Priors that will be used if an alternative is not supplied by the user
      parameters:
        - name: milkUnit
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/MilkUnit"
      responses:
        "200":
          description: Lactation fitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Params"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
  schemas:
    MilkUnit:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: >-
            abbreviated name of measurement unit lb=pounds, kg=kilograms,
            l=liters, g=grams
          default: kg
          example: kg
          enum:
            - lb
            - kg
            - l
            - g
      description: Unit of measurement used for scale and milk weights, defaulting to kg.
    MilkPt:
      description: Measured milk production data point.
      required:
        - dim
        - milk
      type: object
      properties:
        dim:
          description: Days since calving date (DIM).
          type: number
          format: integer
          example: 33
        milk:
          description: >-
            quantity of milk produced in one day, or a fraction of a day
            if **_dayFraction_** is supplied. Milk is measured in units specified
            by **_milkUnit_**, defaulting to kg
          type: number
          format: float
          example: 21
        dayFraction:
          description: >-
            fraction of one day's production that **_milk_** represents,
            defaulting to 1.0
          type: number
          format: float
          default: 1
          example: 0.5
    Lactation:
      description: A single lactation of any length.
      required:
        - lacKey
        - points
      type: object
      properties:
        lacKey:
          type: string
          example: Bossie123
          description: >-
            an identifier to key this lactation. **_lacKey_** values must
            be unique within a LactationList.
        breed:
          type: string
          description: breed of cow
          default: H
          example: J
        parity:
          type: number
          description: parity of this lactation
          format: integer
          default: 2
          example: 1
        points:
          type: array
          items:
            $ref: "#/components/schemas/MilkPt"
    Params:
      description: Parameter set for the MilkBot model
      required:
        - decay
        - ramp
        - scale
      type: object
      properties:
        scale:
          description: >-
            Overall scale of milk production in units specified by milkUnit.
            The MilkBot&reg; model can be converted to another unit of
            measurement for milk simply by multiplying the scale parameter by an
            appropriate conversion factor
          format: float
          example: 25.3
        ramp:
          description: Length of ramp-up period at start of lactation, in **days**.
          type: number
          example: 20
          format: float
        offset:
          type: number
          description: Offset between calving and theoretical start of lactation in **days**.
          format: float
          example: 0
          default: 0
        decay:
          description: >-
            first order decay constant in inverse-days that controls the decline
            in milk production.
          type: number
          format: float
          example: 0.02
        milkUnit:
          $ref: "#/components/schemas/MilkUnit"
    PriorsTree:
      description: >-
        Recursive tree structure with a discriminator function that determines whether
        the content is applicable to a Lactation.  
      type: object
      required: [discriminator, content]
      properties:
        discriminator:
          $ref: "#/components/schemas/Discriminator"
        content:
          oneOf:
            - $ref: "#/components/schemas/Priors"
            - $ref: "#/components/schemas/PriorsTree"
    Priors:
      description: >-
        Optional Bayesian prior expectations for use by fitting engine. If not
        provided, defaults based on breed and parity will be used. **_means_**
        are the expected mean parameter values for the population and **_sd_** are
        expected standard deviation of parameter values for the population
        **_seMilk_** is expected standard error of milk measurements excluding
        the effects of a normal lactation curve
      type: object
      properties:
        means:
          $ref: "#/components/schemas/Params"
        sd:
          $ref: "#/components/schemas/Params"
        seMilk:
          description: standard error in measurement of milk per day
          type: number
          format: float
          example: 5.2
        milkUnit:
          $ref: "#/components/schemas/MilkUnit"
        discriminator:
          $ref: "#/components/schemas/Discriminator"
    FittingJob:
      description: A set of lactations to fit with optional priors tree and fit options..
      required: [lactationSet]
      type: object
      properties:
        lactationSet:
          $ref: "#/components/schemas/LactationSet"
        priorsTree:
           $ref: "#/components/schemas/PriorsTree"
        options:
           $ref: "#/components/schemas/Options"
    FittingResult:
      description: the result of fitting a FittingJob, structured according to the FitOption.
      required: [fits]
      type: object
      properties:
        fits:
          $ref: "#/components/schemas/Fit"
        lactationSet:
          $ref: "#/components/schemas/LactationSet"
        priorsTree:
           $ref: "#/components/schemas/PriorsTree"
        options:
           $ref: "#/components/schemas/Options"
    LactationSet:
      description: A set of lactations with optional milk unit (Kg is default).
      required: [lactations]
      type: object
      properties:
        name:
          description: name for this group of lactations, such as herd name or group
          type: string
          example: Example Farm
        lactations:
          type: array
          items:
            $ref: "#/components/schemas/Lactation"
        milkUnit:
          $ref: "#/components/schemas/MilkUnit"
    Fit:
      description: Results of fitting an array of data points from one lactation to the MilkBot model
      required:
        - params
      type: object
      properties:
        lacKey:
          description: an identifier to key for a Lactation.
          type: string
          example: Bossie123
        params:
          $ref: "#/components/schemas/Params"
        n:
          type: number
          description: number of data points used to calculate fitted parameters.
          format: integer
          example: 12
        sdResiduals:
          type: number
          description: standard deviation of residuals between data points and fitted curve.
          format: float
          example: 2.3
    Options:
      description: Options to be used in fitting and returning results
      type: object
      properties:
        steppedFit:
          description: Should a seperate fitting be made for each data point instead of one fit for the lactation as a whole?
          type: boolean
          default: false
          example: false
        returnInputData:
          description: Should all milk data be returned in the response, or only the fitted parameters and lactation key?
          type: boolean
          default: false
          example: false
        returnPriors:
          description: Should the matches Priors be returned with each fit?
          type: boolean
          default: false
          example: false
        returnPath:
          description: Should parameters for each step in the fitting of each lactation be returned?
          type: boolean
          default: false
          example: false
        fitMethod:
          $ref: "#/components/schemas/FitMethod"
        milkUnitReturned:
          $ref: "#/components/schemas/MilkUnit"
    FitMethod:
      description: the fitting algorithm variant
      type: string
      enum:
        - MilkBot@2.01
      default: MilkBot@2.01
    FitSet:
      description: fits from a LactationSet
      type: object
      properties:
        fitMethod:
          $ref: "#/components/schemas/FitMethod"
        fitDate:
          description: >-
            ISO-8601-formatted datetime added by the server at fitting
          type: string
          format: date-time
          example: 2020-01-10T10:30:37Z
        fitted:
          type: array
          items:
            $ref: "#/components/schemas/FittedLactation"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    FittedLactation:
      description: fits from a LactationSet
      type: object
      required: [fit]
      properties:
        fit:
          $ref: "#/components/schemas/Fit"
        lactation:
          $ref: "#/components/schemas/Lactation"
        priors:
          $ref: "#/components/schemas/Priors"
        path:
          type: array
          items:
            $ref: "#/components/schemas/Params"
    Discriminator:
      description: >-
        function used to match priors to lactations with specified attributes. Breed and Parity
        are default discriminators, but other attributes supplied with lactations may be used
        to customize fitting. For example, ...
        A Discriminator with only the  "null discriminator"
      type: object
      required: [stratum]
      properties:
        stratum:
          description: field name (key) in input data
          type: string
          example: group
        match:
          description: value that must match value in **_Lactation_** to be fitted
          type: string
          example: "group 1"
        upperLimit:
          description: value in **_Lactation_** to be fitted must be **less** than this value
          type: number
          example: 5
        lowerLimit:
          description: value in **_Lactation_** to be fitted must be **more** than this value
          type: number
          example: 2
        equal:
          description: value in **_Lactation_** to be fitted must **equal** this value
          type: number
          example: 2
    Error:
      type: object
      description: error response per RFC 7807
      required:
        - title
        - status
      properties:
        errorType:
          type: string
          description: a URI identifier that categorizes the error
          example: /errors/incorrect-user-pass
        title:
          type: string
          description: A brief, human-readable message about the error
          example: incorrect username or password
        status:
          type: integer
          description: HTTP status code
          example: 400
        detail:
          type: string
          description: a human-readable description of the specific error
          example: Authentication failed due to incorrect username or password.
        instance:
          type: string
          description: a URI that identifies the specific occurrence of the error
          example: /login/log/abc123
